>>> MyList = __import__('1-my_list').MyList

List 1 (Positive Number and one repeated number)
	>>> my_list = MyList()
	>>> my_list += [0]
	>>> my_list.append(2)
	>>> my_list.append(1)
	>>> my_list.append(8)
	>>> my_list.append(4)
	>>> my_list.append(5)
	>>> my_list.append(5)
	>>> my_list.append(3)
	>>> my_list.print_sorted()
	[0, 1, 2, 3, 4, 5, 5, 8]

List 2 (One Number)
	>>> my_list_2 = MyList()
	>>> my_list_2 += [2]
	>>> my_list_2.print_sorted()
	[2]

List 3 (Negative ans Positive Number)
	>>> my_list_3 = MyList()
	>>> my_list_3.append(-10)
	>>> my_list_3.append(-8)
	>>> my_list_3.append(8)
	>>> my_list_3.append(0)
	>>> my_list_3.append(2)
	>>> my_list_3.append(-3)
	>>> my_list_3.append(1)
	>>> my_list_3.print_sorted()
	[-10, -8, -3, 0, 1, 2, 8]

List 4 (Empty List)
	>>> my_list_4 = MyList()
	>>> my_list_4.print_sorted()
	[]

MyList is an instance of the class list
	>>> my_list = MyList()
	>>> isinstance(my_list, list)
	True

MyList has the correct type
	>>> my_list = MyList()
	>>> type(my_list) == MyList
	True

MyList is a subclass of list
	>>> my_list = MyList()
	>>> issubclass(MyList, list)
	True

Print_sorted method with 2 positional arguement
	>>> my_list = MyList()
	>>> my_list.print_sorted([1, 2, 3])
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

Type of print_sorted Method
	>>> my_list = MyList()
	>>> type(my_list.print_sorted)
	<class 'method'>

Check if print_sorted() returns a new list
	>>> my_list = MyList()
	>>> my_list.append(8)
	>>> my_list.append(2)
	>>> my_list.append(5)
	>>> my_list.print_sorted()
	[2, 5, 8]
	>>> my_list
	[8, 2, 5]
